% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/tm_style.R
\name{tm_style}
\alias{tm_style}
\alias{tm_style_bw}
\alias{tm_style_classic}
\title{Styling elements of cartographic maps}
\usage{
tm_style(sepia.intensity = 0, saturation = 1, fontface = "plain",
  fontfamily = "sans", frame.lwd = 1, frame.double.line = FALSE,
  compass.type = "arrow")

tm_style_bw(saturation = 0, ...)

tm_style_classic(sepia.intensity = 0.7, fontfamily = "serif",
  frame.double.line = TRUE, compass.type = "rose", ...)
}
\arguments{
\item{sepia.intensity}{Number between 0 and 1 that defines the amount of sepia effect, which gives the map a brownish flavour. By default this effect is disabled (\code{sepia.intensity=0}).}

\item{saturation}{Number that determines how much saturation (also known as chroma) is used: \code{saturation=0} is greyscale and \code{saturation=1} is normal. A number larger than 1 results in very saturated maps. Hacking tip: use a negative number.}

\item{fontface}{font face of all text in the map.}

\item{fontfamily}{font family of the text labels.}

\item{frame.lwd}{width of the frame}

\item{frame.double.line}{draw a double frame line border?}

\item{compass.type}{type of compass, one of: \code{"arrow"}, \code{"4star"}, \code{"8star"}, \code{"radar"}, \code{"rose"}. Of course, only applicable if a compass is shown. The compass type can also be set within \code{\link{tm_compass}}.}

\item{...}{arguments passed on to \code{tm_style}}
}
\description{
This element specifies the style of the map. There are two main styles: modern, which corresponds to the default values, and classic, which is loaded by calling \code{tm_style_classic}. See details for the difference with \code{\link{tm_layout}}.
}
\details{
The difference between \code{tm_layout} and \code{\link{tm_style}} is the following. Specifications regarding position and size, for instance margins and legend size, are controleld wtih \code{tm_layout}. These specifications are typically dependent on the shapes, and, to a lesser extent, on the type of thematic map. Therefore, map dependent wrappers such as \code{tm_layout_World} can be useful. Furthermore, the default fixed colors (for background, title, attributes, and fixed aestethics) are defined with \code{tm_layout}. On the other hand, \code{\link{tm_style}} controls the styling of the map, that is independent of the used shapes, thematic map type, or used colors. There are two main flavours: modern (default) or classic (\code{\link{tm_style_classic}}).
}
\examples{
data(World)

tm_shape(World) + 
    tm_fill("pop_est_dens", style="kmeans", title="Population density") + 
tm_layout_World("World Population", bg.color="lightblue")

# A custom layout wrapper for Africa
tm_layout_Africa <- function(title=NA,
							 inner.margins = c(.02, .25, .02, .02),
							 draw.frame = FALSE,
							 title.position=c("left", "bottom"), 
							 legend.position = c("left", "bottom"),
							 legend.width = 0.5,
							 bg.color = "lightskyblue2", ...) {
	args <- c(as.list(environment()), list(...))
	do.call("tm_layout", args)
}

Africa <- World[World$continent=="Africa", ]

qtm(Africa, fill="pop_est_dens", fill.style="kmeans", fill.title="Population density") + 
    tm_layout_Africa("Africa")


\dontrun{
# classic styled world map
data(land)
	
# convert to Eckert IV projection
land_eck4 <- set_projection(land, "eck4")

tm_shape(land_eck4) +
	tm_raster("elevation", breaks=c(-Inf, 250, 500, 1000, 1500, 2000, 2500, 3000, 4000, Inf),  
		palette = terrain.colors(9), title="Elevation") +
	tm_shape(World) +
	tm_borders("grey20") +
	tm_grid(projection="longlat", labels.size = .5) +
	tm_text("name", size="AREA") +
	tm_compass(position = c(.65, .15), color.light = "grey90") +
	tm_credits("Eckert IV projection", position = c(.85, 0)) +
	tm_layout(inner.margins=c(.04,.03, .02, .01), legend.position = c("left", "bottom"), 
		legend.frame = TRUE, bg.color="lightblue", legend.bg.color="lightblue", 
		earth.boundary = TRUE, space.color="grey90") + 
	tm_style_classic()
}

# Color theme comparison
two_by_two_plot <- function(tm) {
	require(grid)
	grid.newpage()
	pushViewport(viewport(layout = grid.layout(2,2)))
	print(tm + tm_layout("Default theme"),vp = viewport(layout.pos.row = 1, layout.pos.col = 1))
	print(tm + tm_colors_cobalt(title="Cobalt theme"), vp = viewport(layout.pos.row = 1, layout.pos.col = 2))
	print(tm + tm_colors_albatross(title="Albatross theme"), vp = viewport(layout.pos.row = 2, layout.pos.col = 1))
	print(tm + tm_colors_beaver(title="Beaver theme"), vp = viewport(layout.pos.row = 2, layout.pos.col = 2))
	upViewport()
}

# fixed aesthetics
data(Europe, rivers, metro)
two_by_two_plot(tm_shape(Europe) +
	tm_fill() +
	tm_shape(rivers) +
	tm_lines() +
	tm_shape(metro) +
	tm_bubbles(size="pop2010") + 
	tm_text("name", size="pop2010", auto.placement = TRUE))


# for choropleth aesthetics
data(NLD_muni, NLD_prov)
two_by_two_plot(tm_shape(NLD_muni) +
	tm_fill("population", convert2density = TRUE, style="kmeans") +
tm_shape(NLD_prov) +
	tm_borders(lwd=2) +
	tm_text("name") +
tm_layout(scale=.7))

}
\seealso{
\href{../doc/tmap-nutshell.html}{\code{vignette("tmap-nutshell")}}
}

